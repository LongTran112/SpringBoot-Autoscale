
### Jenkinsfile (Separate File)
```groovy
pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        ARTIFACTORY_CREDENTIALS = credentials('artifactory-credentials')
        KUBECONFIG = credentials('kubeconfig')
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/longtran112/springboot-app.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${env.DOCKERHUB_USERNAME}/springboot-app:\${BUILD_NUMBER}")
                }
            }
        }
        stage('Push to DockerHub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'DOCKERHUB_CREDENTIALS') {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Push to Artifactory') {
            steps {
                script {
                    docker.withRegistry("http://${env.ARTIFACTORY_IP}:8082", 'ARTIFACTORY_CREDENTIALS') {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Deploy to EKS') {
            steps {
                sh '''
                    kubectl config use-context ${env.EKS_CLUSTER}
                    kubectl set image deployment/springboot-app springboot-container=${env.DOCKERHUB_USERNAME}/springboot-app:\${BUILD_NUMBER} -n springboot-app
                '''
            }
        }
    }
}
